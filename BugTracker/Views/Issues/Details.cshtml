@model BugTracker.Models.Issue

<link rel="stylesheet" href="~/css/issue_details.css" />


@{
    ViewData["Title"] = "Details";
    var issueId = Model.Id;
}

@{
    var priorityColor = "";
    if (Model.PriorityId == Priority.Critical || Model.PriorityId == Priority.High)
        priorityColor = "text-danger";
    else if (Model.PriorityId == Priority.MediumHigh || Model.PriorityId == Priority.MediumLow)
        priorityColor = "text-warning";
    else if (Model.PriorityId == Priority.Critical)
        priorityColor = "text-indigo";

    var addActivityParams = new Dictionary<string, string> { { "issueId", Model.Id.ToString() } };
}

<div class="container">
    <div class="row">
        <div class="col-md-9">
            <div class=" ">
                <div class="ibox">
                    <div class="ibox-content">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="m-b-md">
                                    @{
                                        if (User.IsInRole("IsAdmin"))
                                        {
                                            <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-primary btn-sm pull-right js-edit">Edit</a>
                                        }
                                    }
                                    <h2 class="issue-title" issueId="@Model.Id">Issue BT-@Model.Id</h2>
                                    <h4>@Model.Title</h4>
                                </div>
                                <dl class="dl-horizontal">
                                    <dt>Status:</dt>
                                    <dd><span class="label label-primary">@Model.Status.Name</span></dd>
                                </dl>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-5">
                                <dl class="dl-horizontal">
                                    <dt>Created by:</dt>
                                    <dd>@Model.Creator.UserName</dd>
                                    <dt>Messages:</dt>
                                    <dd>@Model.Activities.Count()</dd>
                                    <dt>Project:</dt>
                                    <dd>@Model.Project.Name</dd>
                                    <dt>Area:</dt>
                                    <dd>@Model.Area.Name</dd>
                                </dl>
                            </div>
                            <div class="col-lg-7" id="cluster_info">
                                <dl class="dl-horizontal">
                                    @{
                                        if (Model.StatusId == Status.Resolved)
                                        {
                                            <dt>Date Resolved:</dt>
                                            <dd>@Model.ResolvedDate</dd>
                                        }
                                    }
                                    <dt>Last Updated:</dt>
                                    <dd>@(Model.UpdatedDate != null ? Model.UpdatedDate : "Ticket not worked")</dd>
                                    <dt>Created:</dt>
                                    <dd>@Model.CreatedDate</dd>
                                    <dt>Participants:</dt>
                                    <dd class="project-people">
                                        @{
                                            foreach (var participant in Model.Participants)
                                            {
                                                <a href=""><img alt="" class="img-circle" src="/uploads/@participant.AvatarUrl"></a>
                                            }
                                        }
                                        @*ADD PARTICIPANT MODAL *@
                                    </dd>
                                    <dd class="add-participants-div">
                                        <button type='button' class="btn btn-primary btn-sm d-d-inline-block js-add-participant">Add</button>

                                        <div class="add-participants opacity-0 d-inline-block ">
                                            <form class="add-participants-form form">
                                                <div class="form-group">
                                                    <input disabled list="users" type="text" class="form-control-sm" id="add-participant-input" placeholder="Add participant" autocomplete="off" />
                                                    <datalist class="add-participants-hints" id="users">
                                                    </datalist>
                                                </div>
                                            </form>
                                        </div>

                                    </dd>

                                </dl>
                            </div>
                        </div>
                        <!-- SECTION ACTIVITIES-->
                        <div class="row m-t-sm">
                            <div class="col-lg-12">
                                <h3 class="d-inline">Activity</h3>
                                <a asp-action="edit" asp-controller="Activities" asp-all-route-data="addActivityParams" class="btn btn-primary btn-sm d-inlineblock m-2 mt-0">Post</a>
                                <div class="panel-body">

                                    <div class="tab-content">
                                        <div class="tab-pane active" id="tab-1">
                                            <div class="feed-activity-list">
                                                @foreach (var activity in Model.Activities.Reverse())
                                                {
                                                    <partial name="_ActivityEntry" model="activity"></partial>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- RIGHT PANEL  -->
        <div class="col-md-3">
            <div class="wrapper wrapper-content project-manager">
                <h4>Description</h4>
                <p class="small">
                    @Model.Description
                </p>
                <p class="small font-bold">
                    <span class=@priorityColor><i class="fa fa-circle"></i> @Model.Priority.Name</span>
                </p>
                <h5>Project tag</h5>
                <ul class="tag-list" style="padding: 0">
                    <li><a href="#"><i class="fa fa-tag"></i> biword</a></li>
                    <li><a href="#"><i class="fa fa-tag"></i> Lorem ipsum</a></li>
                    <li><a href="#"><i class="fa fa-tag"></i> Passages</a></li>
                    <li><a href="#"><i class="fa fa-tag"></i> Variations</a></li>
                </ul>
                <h5>Project files</h5>
                <ul class="list-unstyled project-files">
                    <li><a href="#"><i class="fa fa-file"></i> Issue_document.docx</a></li>
                    <li><a href="#"><i class="fa fa-file-picture-o"></i> Screenshot.jpg</a></li>
                    <li><a href="#"><i class="fa fa-stack-exchange"></i> Email_from_Alex.mln</a></li>
                </ul>
                <div class="text-center m-t-md">
                    <a href="#" class="btn btn-xs btn-primary">Add files</a>
                    @{
                        if (User.IsInRole("Developer"))
                        {
                            <a href="#" class="btn btn-xs btn-primary">Reassign</a>

                        }
                        if (User.IsInRole("Administrator"))
                        {
                            <a href="#" class="btn btn-xs btn-danger">Close</a>
                        }
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="addParticipantModal" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addParticipantModalLabel">Add Participant</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @{
                        using (Html.BeginForm("AddParticipant", "Issue", new { @class = "add-participant-form" }))
                        {
                            @Html.TextBoxFor(m => m.Participants,"", new {@class = "form-control"})
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Save changes</button>
                        }
                    }

                </div>
                <div class="modal-footer">
                </div>
            </div>
        </div>
    </div>




</div>

@section Scripts{

<script>
    $(document).ready(async function() {

        let issueId = $(".issue-title").attr("issueId")
        console.log(issueId)

        let originalUsers = await $.ajax({
            url: "/api/appuser/"
        }).done( function(data){
            $(data).each(function() {
                    let option = document.createElement("option");
                    option.id = this.userName
                    $(option).val(this.userName)
                    $(option).text(this.lastName + ", " + this.firstName)

                    $(".add-participants-hints").append(option)
            })
        })

        $(users).each(function() {
                let option = document.createElement("option");
                $(option).val(this.userName)
                $(".add-participants-hints").append(option)
        })

        $("#add-participant-input").on("keyup", async function (){
            let input = $(this)
            let filter = input.val().toLowerCase()

            // set the text of the button to add or cancel if the input is empty
            if (input.val() != "")
                $(".js-add-participant").text("Add")
            else
                $(".js-add-participant").text("Cancel")


            // Get the users using the values as filter
            users = await $.ajax({
                url: '/api/appuser/',
                data: {filter: filter},
                success: () =>{
                    // remove the previous options
                    $(".add-participants-hints").children().remove()

                    // add options with the new users
                    $(users).each(function() {
                        let option = document.createElement("option");
                        option.id = this.userName
                        $(option).val(this.userName)
                        $(option).text(this.lastName + ", " + this.firstName)
                        $(".add-participants-hints").append(option)
                    })
                }
            })
        })

        $(".js-add-participant").on("click", function(){
            let addParticipants = $(".add-participants") // DIV
            let addParticipantInput = $("#add-participant-input")

            // If the input is not enabled, enable it
            if (addParticipantInput.prop("disabled")){
                addParticipants.toggleClass("opacity-0");
                addParticipantInput.removeAttr("disabled")
                this.innerText = "Cancel"
            }

            // if enabled but no there is no input, hide it
            else if (addParticipantInput.val() == ""){
                addParticipants.toggleClass("opacity-0");
                addParticipantInput.attr("disabled", "disabled")
            }

            // if enabled and with input,
            else{
                console.log("HERE")
                let userName = addParticipantInput.val()
                let optionsWithUsername = $(".add-participants").find("option[value='" + userName + "']");

                if(optionsWithUsername != null && optionsWithUsername.length > 0)
                {
                    $.ajax({
                        url: '/api/issues/addParticipant',
                        method:"POST",
                        contentType: "application/json",
                        data: JSON.stringify({userName: userName, issueId: issueId}),
                        success: () =>{
                            successToast("User added!");
                            addParticipantInput.val("")

                        },
                        error: (xhr, ajaxopt, error) =>{
                            errorToast("Something Bad")
                        }
                    })
                }
                else
                    errorToast("Invalid Username")
            }


        })






    })
</script>
}